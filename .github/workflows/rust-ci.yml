on:
  push:
    branches:
      - main
  pull_request:

name: CI
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install gtk dev
        run: sudo apt-get install libgtk-3-dev

      # make sure all code has been formatted with rustfmt
      - run: rustup component add rustfmt
      - name: check rustfmt
        run: cargo fmt -- --check --color always

      # run clippy to verify we have no warnings
      - run: cargo fetch
      - run: rustup component add clippy
      - name: cargo clippy
        run: cargo clippy --all-targets -- -D warnings

  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install gtk dev
        if: matrix.os == 'ubuntu-20.04'
        run: sudo apt-get install libgtk-3-dev
      - run: cargo fetch
      - name: cargo test build
        run: cargo build --tests --release
      - name: cargo test
        run: cargo test --release

  # Remove this check if you don't use cargo-deny in the repo
  deny-check:
    name: cargo-deny
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: EmbarkStudios/cargo-deny-action@v1

  # Remove this check if you don't publish the crate(s) from this repo
  publish-check:
    name: Publish Check
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install gtk dev
        run: sudo apt-get install libgtk-3-dev
      - run: cargo fetch
      - name: cargo publish check
        run: cargo publish --dry-run
